buildscript {
    repositories {
        mavenCentral()
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}


apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'io.fabric'

apply plugin: 'kotlin-kapt'

apply plugin: 'com.akaita.android.easylauncher'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.frangerapp.franger"
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
            testCoverageEnabled = false
        }

    }

    flavorDimensions "server", "development"

    productFlavors {

        staging {
            dimension "development"
        }

        prod {
            dimension "development"
        }

        playstore {
            dimension "server"
        }

        canary {
            versionNameSuffix "-canary"
//            applicationId "com.frangerapp.franger.snapshot"
            dimension "server"
        }

        qa {
            versionNameSuffix "-qa"
//            applicationId "com.frangerapp.franger.mobile.qa"
            dimension "server"
        }

    }
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
    dataBinding {
        enabled true
    }
    kapt {
        generateStubs = true
    }
}

easylauncher {
    iconNames "@mipmap/ic_launcher_foreground" // Traditional launcher icon
    foregroundIconNames "@mipmap/ic_launcher_foreground" // Foreground of adaptive launcher icon

    defaultFlavorNaming = true // Use flavor name for default ribbon, instead of the type name

    productFlavors {
        staging {
            filters = redRibbonFilter()
        }

        prod {}

    }

    buildTypes {
        release {
            enable false
        }
        debug {
            enable true
            // Add two more filters to all `debug` variants
            filters = [
                    customColorRibbonFilter("#0000FF"),
            ]
        }
    }

    variants {
        canaryStagingDebug {
            // OVERRIDE all previous filters defined for `stagingDebug` variant
            filters = orangeRibbonFilter("custom")
        }
    }

//    productFlavors {
//        local {}
//        qa {
//            // Add one more filter to all `qa` variants
//            filters = redRibbonFilter()
//        }
//        staging {}
//        production {}
//    }
//
//    buildTypes {
//        debug {
//            // Add two more filters to all `beta` variants
//            filters = [
//                    customColorRibbonFilter("#0000FF"),
//            ]
//        }
////        canary {
////            // Remove ALL filters to `canary` variants
////            enable false
////        }
//        release {}
//    }
//
//    variants {
//        productionDebug {
//            // OVERRIDE all previous filters defined for `productionDebug` variant
//            filters = orangeRibbonFilter("custom")
//        }
//    }
}
dependencies {
    implementation project(path: ':network')
    implementation project(path: ':logger')
    implementation project(path: ':contacts')
    implementation project(path: ':socket')
    implementation "com.android.support:support-v4:${supportLibVersion}"
    implementation "com.android.support:support-vector-drawable:${supportLibVersion}"
    implementation "com.android.support:cardview-v7:${supportLibVersion}"
    implementation "com.android.support:appcompat-v7:${supportLibVersion}"
    implementation "com.android.support:recyclerview-v7:${supportLibVersion}"
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    implementation('com.crashlytics.sdk.android:crashlytics:2.8.0@aar') {
        transitive = true
    }
    implementation "io.reactivex.rxjava2:rxjava:${rxjavaVersion}"
    implementation "io.reactivex.rxjava2:rxandroid:${rxandroidVersion}"

    // Dagger core
    implementation 'com.android.support:support-v4:27.1.1'
    implementation 'com.google.firebase:firebase-messaging:15.0.2'
    kapt "com.google.dagger:dagger-compiler:${daggerVersion}"
    implementation "com.google.dagger:dagger:${daggerVersion}"

    // Dagger Android
    kapt "com.google.dagger:dagger-android-processor:${daggerVersion}"
    implementation "com.google.dagger:dagger-android-support:${daggerVersion}"
    implementation "com.google.code.gson:gson:${gsonVersion}"

    //EventBus
    implementation "org.greenrobot:eventbus:${eventBusVersion}"
    kapt "org.greenrobot:eventbus:${eventBusVersion}"
    implementation('br.com.simplepass:loading-button-android:1.12.0') {
        exclude module: 'support-annotations'
    }
    implementation 'com.android.support:design:27.1.1'
    implementation 'com.googlecode.libphonenumber:libphonenumber:8.4.2'

    //Architecture Components
    implementation "android.arch.lifecycle:runtime:${archComponentVersion}"
    implementation "android.arch.lifecycle:extensions:${archComponentExtVersion}"
    implementation "android.arch.lifecycle:reactivestreams:${archComponentVersion}"
    kapt "android.arch.lifecycle:compiler:${archComponentCompilerVersion}"

    //Room
    implementation "android.arch.persistence.room:runtime:${archRoomVersion}"
    kapt "android.arch.persistence.room:runtime:${archRoomVersion}"
    kapt "android.arch.persistence.room:compiler:${archRoomVersion}"
    implementation "android.arch.persistence.room:rxjava2:${archLifecycleVersion}"

    //Cardview
    implementation 'com.android.support:appcompat-v7:27.1.1'

    //Permissions
    implementation 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.5@aar'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    //Socket
    implementation('com.github.nkzawa:socket.io-client:0.3.0') {
        // excluding org.json which is provided by Android
        exclude group: 'org.json', module: 'json'
    }
    kapt('com.github.nkzawa:socket.io-client:0.3.0') {
        // excluding org.json which is provided by Android
        exclude group: 'org.json', module: 'json'
    }
    implementation project(':ui')


    implementation 'com.squareup.picasso:picasso:2.5.2'
}

apply plugin: 'com.google.gms.google-services'
